




pipeline {
    agent { 
        label 'master' 
    }
    parameters {
         choice (name: 'env', choices: 'dev\nqa\nprod\nstg', description: 'Env where to deploy')
     }
    stages {
        stage ('deploy') {
            steps {
                script {
                   deploy()
                }
            }
        }
        stage('Testing') {
            steps {
                script {
                    echo 'Building..'
                    sh 'docker images'
                }
            }
        }
    }
}


def deploy () {
    if (params.env == 'dev') {
        sh """
        echo "Deploying Dev environment"
        """
    }
    if (params.env == 'qa') {
        sh """
        echo "Deploying qa environment"
        """
    }
    if (params.env == 'stg') {
        sh """
        echo "Deploying stg environment"
        """
    }
    if (params.env == 'prod') {
        sh """
        echo "Deploying prod environment"
        """
    }
}

def sanityCheck()
{
    println("::=========================================================================================::")
    sh """
    [[ -z ${params.account} ]] && echo "Parameter account name is not set" && exit 2
    [[ -z ${params.clusterName} ]] && echo "Parameter cluster name is not set" && exit 2
    [[ -z ${params.region} ]] && echo "Parameter region name is not set" && exit 2
    [[ -z ${params.chartName} ]] && echo "Parameter chart name is not set" && exit 2
    [[ -z ${params.chartVersion} ]] && echo "Parameter version is not set" && exit 2
    [[ -z ${params.nameSpace} ]] && echo "Parameter namespace is not set" && exit 2
    [[ -z ${params.branchName} ]] && echo "Parameter branch name is not set" && exit 2

    if [[ ${params.deployWithSecret} = "true" ]]
    then
        [[ -z ${params.secretPath} ]] && echo "Parameter path where the secret is stored in AWS system manager is not set" && exit 2
        [[ -z ${params.helmSet} ]] && echo "Parameter helm chart value that you want to overwrite not set" && exit 2
    fi

    if [[ ${params.normalChart} = "true" ]] && [[ ${params.deployWithSecret} = "true" ]]
        then
        echo "Please, check either the normalChart or deployWithSecret. You cannot chose both at the same time"
        exit 2
    fi
    """
}
